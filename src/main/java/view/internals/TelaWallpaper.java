/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.internals;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import model.bean.ConfigBEAN;
import util.ConfigFileFactory;
import util.ImageUtils;

/**
 *
 * @author Usuario
 */
public class TelaWallpaper extends javax.swing.JInternalFrame {

    private BufferedImage[] imgs = null;
    private String actualPath = ConfigFileFactory.PATH;

    public TelaWallpaper() {
        initComponents();
        tfPath.setText(actualPath);
        new Thread(new Runnable() {
            @Override
            public void run() {
                imgs = new ImageUtils().getImagesFrom("data-folder", actualPath);
                preencherLista(actualPath);
                barra.setIndeterminate(false);
            }
        }, "Thread De Carregamento de Imagens").start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        painelPrincipal = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cbLoc = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnSelectPath = new javax.swing.JButton();
        tfPath = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        barra = new javax.swing.JProgressBar();
        btnSalvar = new javax.swing.JButton();
        painelEsquerdo = new javax.swing.JPanel();
        painelInferior = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        painelDeRolagem = new javax.swing.JScrollPane();
        listImagens = new javax.swing.JList<>();
        pnImageContainer = new javax.swing.JPanel();
        lbImg = new javax.swing.JLabel();

        fc.setCurrentDirectory(new File(actualPath));
        fc.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setTitle("Alterar Wallpaper");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        painelPrincipal.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        cbLoc.setBackground(new java.awt.Color(51, 51, 51));
        cbLoc.setForeground(new java.awt.Color(255, 255, 255));
        cbLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Default", "Dados", "Externa" }));
        cbLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLocActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Externa"));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.setEnabled(false);

        btnSelectPath.setBackground(new java.awt.Color(0, 0, 0));
        btnSelectPath.setForeground(new java.awt.Color(255, 255, 255));
        btnSelectPath.setText("Selecionar Caminho");
        btnSelectPath.setEnabled(false);
        btnSelectPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectPathActionPerformed(evt);
            }
        });

        tfPath.setBackground(new java.awt.Color(0, 0, 0));
        tfPath.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        tfPath.setForeground(new java.awt.Color(255, 255, 255));
        tfPath.setEnabled(false);
        tfPath.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfPathKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfPath, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectPath, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(5, 5, 5))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnSelectPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Segundo Plano:");

        barra.setBackground(new java.awt.Color(0, 0, 0));
        barra.setForeground(new java.awt.Color(255, 255, 255));
        barra.setIndeterminate(true);
        barra.setString("");

        btnSalvar.setBackground(new java.awt.Color(0, 0, 0));
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar Wallpaper");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbLoc, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(barra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSalvar)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(barra, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        painelPrincipal.add(jPanel1, java.awt.BorderLayout.LINE_END);

        painelEsquerdo.setLayout(new java.awt.BorderLayout());

        jLayeredPane1.setLayout(new java.awt.GridLayout(1, 0));

        painelDeRolagem.setBorder(null);

        listImagens.setBackground(new java.awt.Color(15, 15, 15));
        listImagens.setForeground(new java.awt.Color(255, 255, 255));
        listImagens.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Sem Itens" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listImagens.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        listImagens.setSelectionBackground(new java.awt.Color(0, 0, 204));
        listImagens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listImagensMouseClicked(evt);
            }
        });
        listImagens.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                listImagensKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                listImagensKeyReleased(evt);
            }
        });
        painelDeRolagem.setViewportView(listImagens);

        jLayeredPane1.add(painelDeRolagem);

        javax.swing.GroupLayout painelInferiorLayout = new javax.swing.GroupLayout(painelInferior);
        painelInferior.setLayout(painelInferiorLayout);
        painelInferiorLayout.setHorizontalGroup(
            painelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        painelInferiorLayout.setVerticalGroup(
            painelInferiorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        painelEsquerdo.add(painelInferior, java.awt.BorderLayout.PAGE_END);

        pnImageContainer.setBackground(new java.awt.Color(25, 25, 25));
        pnImageContainer.setPreferredSize(new java.awt.Dimension(360, 266));

        lbImg.setForeground(new java.awt.Color(255, 255, 255));
        lbImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImg.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnImageContainerLayout = new javax.swing.GroupLayout(pnImageContainer);
        pnImageContainer.setLayout(pnImageContainerLayout);
        pnImageContainerLayout.setHorizontalGroup(
            pnImageContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnImageContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnImageContainerLayout.setVerticalGroup(
            pnImageContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnImageContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbImg, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );

        painelEsquerdo.add(pnImageContainer, java.awt.BorderLayout.CENTER);

        painelPrincipal.add(painelEsquerdo, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        this.setVisible(false);
        getDesktopPane().repaint();
        getDesktopPane().remove(this);
        dispose();
    }//GEN-LAST:event_formInternalFrameClosing

    private void listImagensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listImagensMouseClicked
        setImageOnLabel(listImagens.getSelectedIndex());
    }//GEN-LAST:event_listImagensMouseClicked

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void listImagensKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listImagensKeyPressed

    }//GEN-LAST:event_listImagensKeyPressed

    private void listImagensKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listImagensKeyReleased
        setImageOnLabel(listImagens.getSelectedIndex());
    }//GEN-LAST:event_listImagensKeyReleased

    private void cbLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLocActionPerformed
        new Thread(new Runnable() {
            @Override
            public void run() {
                barra.setIndeterminate(true);
                preencherLista(actualPath);
                barra.setIndeterminate(false);
            }
        }, "Thread De Atualização De Local").start();
    }//GEN-LAST:event_cbLocActionPerformed

    private void btnSelectPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectPathActionPerformed
        fc.setDialogType(JFileChooser.OPEN_DIALOG);
        fc.setControlButtonsAreShown(false);
        int opc = JOptionPane.showInternalOptionDialog(getDesktopPane(), fc, "Selecione A Pasta Externa",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new String[]{"Abrir", "Cancelar"}, null);
        if (opc == 0) {
            actualPath = fc.getCurrentDirectory().getAbsolutePath();
            tfPath.setText(actualPath);
        }
    }//GEN-LAST:event_btnSelectPathActionPerformed

    private void tfPathKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPathKeyReleased
        actualPath = tfPath.getText();
    }//GEN-LAST:event_tfPathKeyReleased

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (listImagens.getSelectedIndex() == -1) {
            JOptionPane.showInternalMessageDialog(getDesktopPane(), "Selecione A Imagem Na Lista", "Alerta", JOptionPane.WARNING_MESSAGE);
        } else {
            String loc = "internal";
            switch (cbLoc.getSelectedIndex()) {
                case 0:
                    loc = "internal";
                    break;
                case 1:
                    loc = "data-folder";
                    break;
                case 2:
                    loc = "external";
                    break;
            }
            if (cbLoc.getSelectedIndex() != 2) {
                ConfigFileFactory cff = new ConfigFileFactory();
                ConfigBEAN cb = cff.readFile();
                cb.setWallpaperLocation(loc);
                cb.setWallpaperFilePath(listImagens.getSelectedValue());
                cff.writeFile(cb);
                JOptionPane.showInternalMessageDialog(getDesktopPane(), "Reinicie O XLIV System Para Aplicar Wallpaper", "Info", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);
                getDesktopPane().repaint();
                getDesktopPane().remove(this);
                dispose();
            } else {
                JOptionPane.showMessageDialog(getDesktopPane(), "Não Suportado Ainda", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSalvarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barra;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSelectPath;
    private javax.swing.JComboBox<String> cbLoc;
    private javax.swing.JFileChooser fc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbImg;
    private javax.swing.JList<String> listImagens;
    private javax.swing.JScrollPane painelDeRolagem;
    private javax.swing.JPanel painelEsquerdo;
    private javax.swing.JPanel painelInferior;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JPanel pnImageContainer;
    private javax.swing.JTextField tfPath;
    // End of variables declaration//GEN-END:variables
private void preencherLista(String local) {
        DefaultListModel<String> model = new DefaultListModel<>();
        String loc = "internal";
        switch (cbLoc.getSelectedIndex()) {
            case 0:
                loc = "internal";
                break;
            case 1:
                loc = "data-folder";
                break;
            case 2:
                loc = "external";
                break;
        }
        if (cbLoc.getSelectedIndex() != 2) {
            File[] imgs = null;
            try {
                imgs = new ImageUtils().listImagesFrom(loc, local);
            } catch (IOException ex) {
            }
            BufferedImage imgb[] = new ImageUtils().getImagesFrom(loc, local);
            this.imgs = imgb;
            for (File img : imgs) {
                model.addElement(img.getName());
            }
            listImagens.setModel(model);
            setImageOnLabel(0);
        } else {
            JOptionPane.showMessageDialog(getDesktopPane(), "Não Suportado Ainda", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void setImageOnLabel(int index) {

        BufferedImage img;
        try {
            //img = ImageIO.read(new URL(this.imgs[index].getAbsolutePath()));
            img = imgs[index];
            Image im = img.getScaledInstance(360, 242, BufferedImage.SCALE_DEFAULT);
            lbImg.setIcon(new ImageIcon(im));

        } catch (Exception ex) {
        }
    }
}
